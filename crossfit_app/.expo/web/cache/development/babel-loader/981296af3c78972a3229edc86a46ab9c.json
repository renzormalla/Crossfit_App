{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport firebase from 'firebase';\nimport { LogBox } from \"react-native-web/dist/index\";\nLogBox.ignoreLogs(['Setting a timer']);\nexport var ingresar = function ingresar(email, password) {\n  if (email === '' || password === '') {\n    alert('Enter details to signin!');\n  } else {\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function (res) {\n      Alert.alert(\"Info\", \"Acceso Exitoso\");\n    }).catch(function (error) {\n      Alert.alert(\"Error\", error.message + \" - \" + error.code);\n    });\n  }\n};\nexport var getUserReserve = function getUserReserve(day, hour, setUser) {\n  var reserve = firebase.firestore().collection('Reserve').doc(day).collection('Hour').doc(hour);\n  reserve.get().then(function (data) {\n    setUser(data.data().student);\n  });\n};\nexport var update_user = function update_user(name, last, email, city, division, age, height, weight, biography, back_squat, clean, clean_jerk, snatch, deadlift, pull_ups, fran) {\n  firebase.firestore().collection('User').doc(email).set({\n    name: name,\n    last: last,\n    city: city,\n    division: division,\n    age: age,\n    height: height,\n    weight: weight,\n    biography: biography,\n    back_squat: back_squat,\n    clean: clean,\n    clean_jerk: clean_jerk,\n    snatch: snatch,\n    deadlift: deadlift,\n    pull_ups: pull_ups,\n    fran: fran\n  }).catch(function () {\n    Alert.alert(\"Error\", \"Porfavor llene todos los datos\", [], {\n      cancelable: true\n    });\n  });\n};\nexport var create_user = function create_user(email, password, name, last, rol, date) {\n  if (email === '' || password === '' || last === '' || name === '') {\n    alert('Enter details to signin!');\n  } else {\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(function (res) {\n      firebase.firestore().collection('User').doc(email).set({\n        name: name,\n        last: last,\n        rol: rol,\n        date: date,\n        email: email,\n        city: 'Quito',\n        division: 'none',\n        age: 0,\n        height: '0 cm',\n        weight: '0 kg',\n        biography: 'Inserte su biografía aquí',\n        back_squat: 0,\n        clean: 0,\n        clean_jerk: 0,\n        snatch: 0,\n        deadlift: 0,\n        pull_ups: 0,\n        fran: '00:00'\n      }).catch(function () {\n        Alert.alert(\"Error\", \"Porfavor llene todos los datos\", [], {\n          cancelable: true\n        });\n      });\n      Alert.alert(\"Correcto\", \"Usuario registrado exitosamente\", [], {\n        cancelable: true\n      });\n    }).catch(function () {\n      Alert.alert(\"Error\", \"Usuario ya se encuentra registrado\", [], {\n        cancelable: true\n      });\n    });\n  }\n};\nexport var create_reserve = function create_reserve(user, monday, tuesday, wednesday, thursday, friday, saturday, sunday) {\n  if (monday != 'none') {\n    validate_reserve(user, 'Monday', monday);\n  }\n\n  if (tuesday != 'none') {\n    validate_reserve(user, 'Tuesday', tuesday);\n  }\n\n  if (wednesday != 'none') {\n    validate_reserve(user, 'Wednesday', wednesday);\n  }\n\n  if (thursday != 'none') {\n    validate_reserve(user, 'Thursday', thursday);\n  }\n\n  if (friday != 'none') {\n    validate_reserve(user, 'Friday', friday);\n  }\n\n  if (saturday != 'none') {\n    validate_reserve(user, 'Saturday', saturday);\n  }\n\n  if (sunday != 'none') {\n    validate_reserve(user, 'Sunday', sunday);\n  }\n};\nexport var validate_reserve = function validate_reserve(user, day, hour) {\n  var cont = 0;\n  var flag = false;\n  var msg = '';\n  var reserve = firebase.firestore().collection('Reserve').doc(day).collection('Hour').doc(hour);\n  reserve.get().then(function (data) {\n    if (!data.data().student) {\n      reserve.set({\n        student: [user]\n      }, {\n        merge: true\n      });\n    } else {\n      data.data().student.forEach(function (doc) {\n        if (cont == 9) {\n          Alert.alert(\"Error\", \"Existen horarios llenos, verifique las reservas\", [], {\n            cancelable: true\n          });\n        } else {\n          if (doc == user) {\n            Alert.alert(\"Error\", \"Ya se encuentra resgistrado es ese horario\", [], {\n              cancelable: true\n            });\n          } else {\n            flag = true;\n          }\n        }\n\n        cont++;\n      });\n\n      if (flag == true) {\n        firebase.firestore().runTransaction(function (transaction) {\n          return transaction.get(reserve).then(function (snapshot) {\n            var largerArray = snapshot.get('student');\n            largerArray.push(user);\n            transaction.update(reserve, 'student', largerArray);\n          });\n        });\n        flag = false;\n      }\n    }\n  });\n};\nexport var signOut = function signOut() {\n  firebase.auth().signOut().then(function (obj) {\n    Alert.alert(\"Info\", \"Sesion Finalizada\");\n  }).catch(function (error) {\n    Alert.alert(\"Error\", error.message + \" - \" + error.code);\n  });\n};\nexport var recuperarClave = function recuperarClave(email, fnIrLogin) {\n  firebase.auth().sendPasswordResetEmail(email).then(function (obj) {\n    Alert.alert(\"Info\", \"Ingrese a su correo para restaurar la clave\");\n    fnIrLogin();\n  }).catch(function (error) {\n    Alert.alert(\"Error\", error.message + \" - \" + error.code);\n  });\n};\nexport var uploadData = function uploadData(upload, user) {\n  firebase.firestore().collection('User').doc(user).get().then(function (doc) {\n    if (doc.exists) {\n      upload(doc.data());\n    } else {\n      Alert.alert(\"Informacion no encontrada\");\n    }\n  }).catch(function (error) {\n    Alert.alert(\"Error getting document:\", error);\n  });\n};\nexport var uploadProfile = function uploadProfile(upload, user) {\n  firebase.firestore().collection('User').doc(user).get().then(function (doc) {\n    if (doc.exists) {\n      upload(doc.data());\n    } else {\n      Alert.alert(\"Informacion no encontrada\");\n    }\n  }).catch(function (error) {\n    Alert.alert(\"Error getting document:\", error);\n  });\n};\nexport var uploadDetail = function uploadDetail(upload, user) {\n  firebase.firestore().collection('User').doc(user).get().then(function (doc) {\n    if (doc.exists) {\n      upload(doc.data());\n    } else {\n      Alert.alert(\"Informacion no encontrada\");\n    }\n  }).catch(function (error) {\n    Alert.alert(\"Error getting document:\", error);\n  });\n};\nexport var getFireUsers = function getFireUsers(getUsers) {\n  console.log(\"USUARIOS\");\n  var userList = [];\n  var image = '';\n  firebase.firestore().collection('User').get().then(function _callee2(users) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            users.forEach(function _callee(doc) {\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      console.log(\"IMAGEN\");\n                      firebase.storage().ref().child(doc.id).getDownloadURL().then(function (res) {\n                        image = res;\n                        userList.push({\n                          email: doc.id,\n                          name: doc.data().name + \" \" + doc.data().last,\n                          avatar_url: image\n                        });\n                        console.log(doc.id, \" -- \", image);\n                      }).catch(function (error) {\n                        image = 'empty';\n                        userList.push({\n                          email: doc.id,\n                          name: doc.data().name + \" \" + doc.data().last,\n                          avatar_url: image\n                        });\n                        console.log(doc.id, \" -- \", image);\n                      });\n                      console.log(\"Lista\");\n                      getUsers(userList);\n\n                    case 4:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            });\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  });\n};","map":{"version":3,"sources":["C:/Users/PC/Desktop/Crossfit_App/crossfit_app/service/LoginServices.js"],"names":["firebase","LogBox","ignoreLogs","ingresar","email","password","alert","auth","signInWithEmailAndPassword","then","res","Alert","catch","error","message","code","getUserReserve","day","hour","setUser","reserve","firestore","collection","doc","get","data","student","update_user","name","last","city","division","age","height","weight","biography","back_squat","clean","clean_jerk","snatch","deadlift","pull_ups","fran","set","cancelable","create_user","rol","date","createUserWithEmailAndPassword","create_reserve","user","monday","tuesday","wednesday","thursday","friday","saturday","sunday","validate_reserve","cont","flag","msg","merge","forEach","runTransaction","transaction","snapshot","largerArray","push","update","signOut","obj","recuperarClave","fnIrLogin","sendPasswordResetEmail","uploadData","upload","exists","uploadProfile","uploadDetail","getFireUsers","getUsers","console","log","userList","image","users","storage","ref","child","id","getDownloadURL","avatar_url"],"mappings":"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","sourcesContent":["import { Alert } from \"react-native\"\r\nimport firebase from 'firebase'\r\n//////////////////\r\nimport { LogBox } from 'react-native';\r\nLogBox.ignoreLogs(['Setting a timer']);\r\n//////////////////\r\n\r\n\r\nexport const ingresar = (email, password) => {\r\n\tif(email === '' || password === '') {\r\n\t\talert('Enter details to signin!')\r\n\t} else {\r\n\t\tfirebase\r\n\t\t.auth()\r\n\t\t.signInWithEmailAndPassword(email, password)\r\n\t\t.then((res) => {\r\n\t\t\tAlert.alert(\"Info\",\"Acceso Exitoso\")\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tAlert.alert(\"Error\", error.message+\" - \"+error.code)\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport const getUserReserve = (day, hour, setUser) => {\r\n\r\n\t\tlet reserve = firebase\r\n\t\t\t.firestore()\r\n\t\t\t.collection('Reserve')\r\n\t\t\t.doc(day)\r\n\t\t\t.collection('Hour')\r\n\t\t\t.doc(hour)\r\n\r\n\t\treserve.get().then(function(data){\r\n\t\t\t\tsetUser(data.data().student)\r\n\t\t});\r\n}\r\n\r\nexport const update_user = (name, last, email, city, division, age, height, weight, biography, back_squat, clean, clean_jerk, snatch, deadlift, pull_ups, fran) => {\r\n    firebase\r\n        .firestore()\r\n        .collection('User')\r\n        .doc(email).set({\r\n            name: name,\r\n            last: last,\r\n            city: city,\r\n            division: division,\r\n            age: age,\r\n            height: height,\r\n            weight: weight,\r\n            biography: biography,\r\n            back_squat: back_squat,\r\n            clean: clean,\r\n            clean_jerk: clean_jerk,\r\n            snatch: snatch,\r\n            deadlift: deadlift,\r\n            pull_ups: pull_ups,\r\n            fran: fran\r\n        })\r\n        .catch(function() {\r\n            Alert.alert(\r\n                \"Error\",\r\n                \"Porfavor llene todos los datos\", [],\r\n                { cancelable: true }\r\n            );\r\n        });\r\n}\r\n\r\nexport const create_user = (email, password, name, last, rol, date) => {\r\n    if(email === '' || password === '' || last === '' || name === '') {\r\n        alert('Enter details to signin!')\r\n    } else {\r\n        firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then((res) => {\r\n                firebase\r\n                .firestore()\r\n                .collection('User')\r\n                .doc(email).set({\r\n                    name: name,\r\n                    last: last,\r\n                    rol: rol,\r\n                    date: date,\r\n                    email: email,\r\n                    city: 'Quito',\r\n                    division: 'none',\r\n                    age: 0,\r\n                    height: '0 cm',\r\n                    weight: '0 kg',\r\n                    biography: 'Inserte su biografía aquí',\r\n                    back_squat: 0,\r\n                    clean: 0,\r\n                    clean_jerk: 0,\r\n                    snatch: 0,\r\n                    deadlift: 0,\r\n                    pull_ups: 0,\r\n                    fran: '00:00'\r\n                })\r\n                .catch(function() {\r\n                    Alert.alert(\r\n                        \"Error\",\r\n                        \"Porfavor llene todos los datos\", [],\r\n                        { cancelable: true }\r\n                    );\r\n                });\r\n\r\n\r\n            Alert.alert(\r\n                \"Correcto\",\r\n                \"Usuario registrado exitosamente\", [],\r\n                { cancelable: true }\r\n            );\r\n        })\r\n        .catch(function() {\r\n            Alert.alert(\r\n                \"Error\",\r\n                \"Usuario ya se encuentra registrado\", [],\r\n                { cancelable: true }\r\n            );\r\n        });\r\n    }\r\n}\r\n\r\nexport const create_reserve = (user, monday, tuesday, wednesday, thursday, friday, saturday, sunday) => {\r\n\r\n    if(monday != 'none'){\r\n        validate_reserve(user, 'Monday', monday)\r\n    }\r\n    if(tuesday != 'none'){\r\n        validate_reserve(user, 'Tuesday', tuesday)\r\n    }\r\n    if(wednesday != 'none'){\r\n        validate_reserve(user, 'Wednesday', wednesday)\r\n    }\r\n    if(thursday != 'none'){\r\n        validate_reserve(user, 'Thursday', thursday)\r\n    }\r\n    if(friday != 'none'){\r\n        validate_reserve(user, 'Friday', friday)\r\n    }\r\n    if(saturday != 'none'){\r\n        validate_reserve(user, 'Saturday', saturday)\r\n    }\r\n    if(sunday != 'none'){\r\n        validate_reserve(user, 'Sunday', sunday)\r\n    }\r\n}\r\n\r\nexport const validate_reserve = (user, day, hour) => {\r\n    var cont = 0;\r\n    var flag = false\r\n    var msg = ''\r\n    let reserve = firebase.firestore().collection('Reserve').doc(day).collection('Hour').doc(hour)\r\n        reserve.get().then(function(data){\r\n            if(!data.data().student){\r\n                reserve\r\n                .set(\r\n                    { student: [user] },\r\n                    { merge: true }\r\n                )\r\n            }else{\r\n                data.data().student.forEach(function(doc){\r\n\r\n                    if(cont == 9){\r\n                        Alert.alert(\r\n                            \"Error\",\r\n                            \"Existen horarios llenos, verifique las reservas\", [],\r\n                            { cancelable: true }\r\n                        );\r\n                    }\r\n                    else{\r\n                        if(doc == user){\r\n                            Alert.alert(\r\n                                \"Error\",\r\n                                \"Ya se encuentra resgistrado es ese horario\", [],\r\n                                { cancelable: true }\r\n                            );\r\n                        }\r\n                        else{\r\n                            flag = true\r\n                        }\r\n                    }\r\n                    cont++;\r\n                })\r\n                if(flag == true){\r\n                    firebase.firestore().runTransaction(transaction => {\r\n                        return transaction.get(reserve).then(snapshot => {\r\n                            const largerArray = snapshot.get('student');\r\n                            largerArray.push(user);\r\n                            transaction.update(reserve, 'student', largerArray);\r\n                        });\r\n                    });\r\n                    flag = false\r\n                }\r\n\r\n            }\r\n        })\r\n\r\n}\r\n\r\nexport const signOut = () => {\r\n    firebase\r\n    .auth()\r\n    .signOut()\r\n    .then((obj) => {\r\n        Alert.alert(\"Info\",\"Sesion Finalizada\")\r\n    })\r\n    .catch((error) => {\r\n        Alert.alert(\"Error\", error.message+\" - \"+error.code)\r\n    })\r\n}\r\n\r\nexport const recuperarClave = (email, fnIrLogin) => {\r\n    firebase\r\n    .auth()\r\n    .sendPasswordResetEmail(email)\r\n    .then((obj) => {\r\n        Alert.alert(\"Info\",\"Ingrese a su correo para restaurar la clave\")\r\n        fnIrLogin()\r\n    })\r\n    .catch((error) => {\r\n        Alert.alert(\"Error\", error.message+\" - \"+error.code)\r\n    })\r\n}\r\n\r\nexport const uploadData = (upload, user) => {\r\n\r\n    firebase.firestore().collection('User').doc(user)\r\n    .get().then(function(doc) {\r\n    if (doc.exists) {\r\n        upload(doc.data())\r\n    } else {\r\n        Alert.alert(\"Informacion no encontrada\");\r\n    }\r\n    }).catch(function(error) {\r\n        Alert.alert(\"Error getting document:\", error);\r\n    });\r\n}\r\n\r\nexport const uploadProfile = (upload, user) => {\r\n\r\n    firebase.firestore().collection('User').doc(user)\r\n    .get().then(function(doc) {\r\n    if (doc.exists) {\r\n        upload(doc.data())\r\n    } else {\r\n        Alert.alert(\"Informacion no encontrada\");\r\n    }\r\n    }).catch(function(error) {\r\n        Alert.alert(\"Error getting document:\", error);\r\n    });\r\n}\r\n\r\nexport const uploadDetail = (upload, user) => {\r\n\r\n    firebase.firestore().collection('User').doc(user)\r\n    .get().then(function(doc) {\r\n    if (doc.exists) {\r\n        upload(doc.data())\r\n    } else {\r\n        Alert.alert(\"Informacion no encontrada\");\r\n    }\r\n    }).catch(function(error) {\r\n        Alert.alert(\"Error getting document:\", error);\r\n    });\r\n}\r\n\r\nexport const getFireUsers = (getUsers) => {\r\n    console.log(\"USUARIOS\")\r\n    let userList = []\r\n    let image = ''\r\n    firebase\r\n        .firestore()\r\n        .collection('User').get()\r\n        .then(async function(users) {\r\n            users.forEach(async function(doc) {\r\n                console.log(\"IMAGEN\")\r\n                firebase.storage().ref().child(doc.id).getDownloadURL()\r\n                .then(res => {\r\n                    image = res\r\n                    userList.push({\r\n                        email:doc.id,\r\n                        name: doc.data().name + \" \" + doc.data().last,\r\n                        avatar_url: image,\r\n                    })\r\n                    console.log(doc.id,\" -- \", image)\r\n                    // console.log(\"Lista\")\r\n                    // getUsers(userList)\r\n                })\r\n                .catch(error => {\r\n                    image = 'empty'\r\n                    userList.push({\r\n                        email:doc.id,\r\n                        name: doc.data().name + \" \" + doc.data().last,\r\n                        avatar_url: image,\r\n                    })\r\n                    console.log(doc.id,\" -- \", image)\r\n                    // console.log(\"Lista\")\r\n                    // getUsers(userList)\r\n                });\r\n                console.log(\"Lista\")\r\n                getUsers(userList)\r\n            });\r\n            // console.log(\"Lista\")\r\n            // getUsers(userList)\r\n        })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}