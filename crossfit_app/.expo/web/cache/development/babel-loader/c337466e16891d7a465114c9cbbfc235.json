{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\Crossfit_App\\\\crossfit_app\\\\screens\\\\CreateUser.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Card, Input, Button } from 'react-native-elements';\nimport Moment from 'moment';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { create_user } from \"../service/LoginServices\";\nimport IconAntDesign from \"@expo/vector-icons/AntDesign\";\nimport RNPickerSelect from 'react-native-picker-select';\nimport IconFontAwesome from \"@expo/vector-icons/FontAwesome\";\nexport default function CreateUser() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState('crossfiter'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      rol = _useState6[0],\n      setRol = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      name = _useState8[0],\n      setName = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      last = _useState10[0],\n      setLast = _useState10[1];\n\n  var _useState11 = useState(new Date()),\n      _useState12 = _slicedToArray(_useState11, 2),\n      date = _useState12[0],\n      setDate = _useState12[1];\n\n  var _useState13 = useState('date'),\n      _useState14 = _slicedToArray(_useState13, 2),\n      mode = _useState14[0],\n      setMode = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      show = _useState16[0],\n      setShow = _useState16[1];\n\n  Moment.locale('en');\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    setShow(Platform.OS === 'ios');\n    setDate(currentDate);\n  };\n\n  var showMode = function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  var showDatepicker = function showDatepicker() {\n    showMode('date');\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: styles.scrollView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, React.createElement(Card, {\n    containerStyle: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, React.createElement(Card.Title, {\n    h4: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"Crear Usuario\"), React.createElement(Card.Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }), React.createElement(Input, {\n    labelStyle: styles.input,\n    label: \"Nombre\",\n    placeholder: \" Escriba el nombre ...\",\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }), React.createElement(Input, {\n    labelStyle: styles.input,\n    label: \"Apellido\",\n    placeholder: \" Escriba el apellido ...\",\n    onChangeText: function onChangeText(text) {\n      return setLast(text);\n    },\n    value: last,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }), React.createElement(Button, {\n    buttonStyle: styles.buttonDate,\n    onPress: showDatepicker,\n    title: \"Fecha Nacimiento:  \" + Moment(date).format('DD MMMM YYYY'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }), show && React.createElement(DateTimePicker, {\n    testID: \"dateTimePicker\",\n    value: date,\n    mode: mode,\n    is24Hour: true,\n    display: \"default\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }), React.createElement(RNPickerSelect, {\n    placeholder: {},\n    items: [{\n      label: 'Crossfiter',\n      value: 'crossfiter'\n    }, {\n      label: 'Coach',\n      value: 'coach'\n    }],\n    onValueChange: function onValueChange(text) {\n      return setRol(text);\n    },\n    value: rol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }), React.createElement(Input, {\n    caretHidden: true,\n    labelStyle: styles.input,\n    label: \"Correo\",\n    placeholder: \" Escriba el correo ...\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }), React.createElement(Input, {\n    labelStyle: styles.input,\n    label: \"Contras\\xF1a\",\n    placeholder: \" Escribe tu contrase\\xF1a ...\",\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    leftIcon: React.createElement(IconFontAwesome, {\n      name: \"lock\",\n      size: 25,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 36\n      }\n    }),\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }), React.createElement(Button, {\n    buttonStyle: styles.button,\n    title: \" CREAR\",\n    onPress: function onPress() {\n      create_user(email, password, name, last, rol, date);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: StatusBar.currentHeight,\n    flex: 1,\n    width: Dimensions.get('window').width,\n    backgroundColor: '#eeeeee',\n    alignItems: 'center',\n    justifyContent: 'center',\n    overflow: 'visible'\n  },\n  scrollView: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    width: Dimensions.get('window').width\n  },\n  card: {\n    marginHorizontal: 20,\n    marginTop: 20,\n    borderRadius: 20,\n    width: '90%',\n    backgroundColor: '#fff'\n  },\n  input: {\n    marginTop: 10\n  },\n  buttonDate: {\n    marginHorizontal: 15,\n    marginVertical: 5,\n    backgroundColor: '#f2b90a'\n  },\n  button: {\n    marginVertical: 30,\n    borderRadius: 10,\n    marginHorizontal: 50,\n    backgroundColor: '#f2b90a'\n  }\n});","map":{"version":3,"sources":["C:/Users/PC/Desktop/Crossfit_App/crossfit_app/screens/CreateUser.js"],"names":["React","useState","Card","Input","Button","Moment","DateTimePicker","create_user","IconAntDesign","RNPickerSelect","IconFontAwesome","CreateUser","email","setEmail","password","setPassword","rol","setRol","name","setName","last","setLast","Date","date","setDate","mode","setMode","show","setShow","locale","onChange","event","selectedDate","currentDate","Platform","OS","showMode","currentMode","showDatepicker","styles","container","scrollView","card","input","text","buttonDate","format","label","value","button","StyleSheet","create","marginTop","StatusBar","currentHeight","flex","width","Dimensions","get","backgroundColor","alignItems","justifyContent","overflow","flexGrow","marginHorizontal","borderRadius","marginVertical"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, StatusBar, SafeAreaView , ScrollView, Dimensions  } from 'react-native';\r\nimport { Card, Input, Button } from 'react-native-elements'\r\nimport Moment from 'moment';\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\n\r\nimport { create_user } from '../service/LoginServices'\r\n\r\nimport IconAntDesign from 'react-native-vector-icons/AntDesign';\r\nimport RNPickerSelect from 'react-native-picker-select';\r\nimport IconFontAwesome from 'react-native-vector-icons/FontAwesome';\r\n\r\n// YellowBox.ignoreWarnings([\r\n//     \"componentWillReceiveProps\",\r\n//     \"Setting a timer\",\r\n// ]);\r\n\r\nexport default function CreateUser() {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [rol, setRol] = useState('crossfiter');\r\n    const [name, setName] = useState('');\r\n    const [last, setLast] = useState('');\r\n    const [date, setDate] = useState(new Date());\r\n    const [mode, setMode] = useState('date');\r\n    const [show, setShow] = useState(false);\r\n\r\n    Moment.locale('en');\r\n\r\n    const onChange = (event, selectedDate) => {\r\n        const currentDate = selectedDate || date;\r\n        setShow(Platform.OS === 'ios');\r\n        setDate(currentDate);\r\n    };\r\n\r\n    const showMode = (currentMode) => {\r\n        setShow(true);\r\n        setMode(currentMode);\r\n    };\r\n\r\n    const showDatepicker = () => {\r\n        showMode('date');\r\n    };\r\n\r\n    return (\r\n        <SafeAreaView  style={styles.container}>\r\n            <ScrollView contentContainerStyle={styles.scrollView}>\r\n                <Card containerStyle={styles.card}>\r\n                    <Card.Title h4 >Crear Usuario</Card.Title>\r\n                    <Card.Divider/>\r\n                    <Input\r\n                        labelStyle={styles.input}\r\n                        label='Nombre'\r\n                        placeholder=' Escriba el nombre ...'\r\n                        onChangeText={(text) => setName(text)}\r\n                        value={name}\r\n                    />\r\n                    <Input\r\n                        labelStyle={styles.input}\r\n                        label='Apellido'\r\n                        placeholder=' Escriba el apellido ...'\r\n                        onChangeText={(text) => setLast(text)}\r\n                        value={last}\r\n                    />\r\n                    <Button buttonStyle={styles.buttonDate} onPress={showDatepicker} title={ \"Fecha Nacimiento:  \" + Moment(date).format('DD MMMM YYYY')} />\r\n                    {show && (\r\n                        <DateTimePicker\r\n                        testID=\"dateTimePicker\"\r\n                        value={date}\r\n                        mode={mode}\r\n                        is24Hour={true}\r\n                        display=\"default\"\r\n                        onChange={onChange}\r\n                        />\r\n                    )}\r\n                    <RNPickerSelect\r\n                        \r\n                        placeholder={{}}\r\n                        \r\n                        items={[\r\n                            { label: 'Crossfiter', value: 'crossfiter' },\r\n                            { label: 'Coach', value: 'coach' }\r\n                        ]}\r\n                        onValueChange={(text) => setRol(text)}\r\n                        value={rol}\r\n                    />\r\n                    <Input\r\n                        caretHidden\r\n                        labelStyle={styles.input}\r\n                        label='Correo'\r\n                        placeholder=' Escriba el correo ...'\r\n                        onChangeText={(text) => setEmail(text)}\r\n                        value={email}\r\n                    />\r\n                    <Input\r\n                        labelStyle={styles.input}\r\n                        label='Contrasña'\r\n                        placeholder=' Escribe tu contraseña ...'\r\n                        onChangeText={(text) => setPassword(text)}\r\n                        value={password}\r\n                        leftIcon={ <IconFontAwesome name='lock' size={25} color='black'/> }\r\n                        secureTextEntry={true}\r\n                    />\r\n                    <Button\r\n                        buttonStyle={styles.button}\r\n                        title=' CREAR'\r\n                        onPress={() => {create_user(email, password, name, last, rol, date)}}\r\n                    />\r\n                </Card>\r\n            </ScrollView>\r\n        </SafeAreaView >\r\n    );\r\n}\r\n    \r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        marginTop: StatusBar.currentHeight,\r\n        flex: 1,\r\n        width: Dimensions.get('window').width,\r\n        backgroundColor: '#eeeeee',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        overflow: 'visible'\r\n    },\r\n    scrollView: {\r\n        flexGrow: 1,\r\n        justifyContent: 'center',\r\n        width: Dimensions.get('window').width,\r\n    },\r\n    card: {\r\n        marginHorizontal: 20,\r\n        marginTop: 20,\r\n        borderRadius: 20,\r\n        width: '90%',\r\n        backgroundColor: '#fff'\r\n    },\r\n    input:{\r\n        marginTop: 10,\r\n    },\r\n    buttonDate: {\r\n        marginHorizontal: 15, \r\n        marginVertical: 5,\r\n        backgroundColor:'#f2b90a'\r\n    },\r\n    button: {\r\n        marginVertical: 30,\r\n        borderRadius: 10, \r\n        marginHorizontal: 50,\r\n        backgroundColor:'#f2b90a'\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}